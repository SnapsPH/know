[{"source":"https://developers.paymongo.com/docs/save-card-api","extractedAt":"2025-01-05T04:28:50.131Z","content":"**Account Configuration and Save Card Feature**\n\nTo get started with integrating the PayMongo API, you need to configure your account first. Please message [email address] to request key configuration.\n\n**Save Card Feature Overview**\n\nThe Save Card feature allows merchants to save and reuse card details on our platform. This feature serves two purposes:\n\n1. **Improved User Experience**: By saving a card, customers can make future purchases without having to enter their payment information.\n2. **Increased Revenue Potential**: Merchants can charge customers off-session using saved cards.\n\n**Session Type**\n\nTo distinguish between the two main use cases, we'll denote them as:\n\n* **On-Session**: Allows cardholders to use a vaulted card when they want to make a purchase in the same session.\n* **Off-Session**: Allows merchants to charge cardholders even without their intervention.\n\n**Integrating Save Card through Payment Intent Workflow**\n\nThe payment intent workflow is the main workflow used to make payments via PayMongo. To enable save card, you need to add a few additional steps to this existing workflow:\n\n1. **Create a Customer**\n\t* The merchant needs to create a customer to be able to save cards on their account.\n2. **Save a Card to a Customer**\n\t* Once the customer is created, the merchant can save a card using the following attributes:\n```json\n\"setup_future_usage\": {\n  \"session_type\": \"on_session\",\n  \"customer_id\": \"cus_Exy3jegPk4eEagpQcE6wnLB4\"\n}\n```\n**Using a Saved Card**\n\nWe've designed the following workflow to use a saved card:\n\n1. **Verify Customer Existence**\n\t* The merchant can verify if the customer exists in their database by retrieving the customer using the `Retrieve Customer` endpoint.\n2. **Choose Among Saved Payment Methods**\n\t* Once the customer is verified, the merchant can fetch all saved payment methods of the customer and choose among them to charge with.\n3. **Update CVC (On-Session Transactions)**\n\t* After selecting a vaulted card, the merchant needs to collect the CVC and update the payment method in the backend using the `Update Payment Method` endpoint.\n4. **Charge Saved Payment Method**\n\t* To charge the saved payment method, the merchant can create a new payment intent using the `Create Payment Intent` endpoint and attach the updated payment method using the `Attach to Payment Intent` endpoint.\n\n**Deleting a Customer or Saved Card**\n\nThe merchant can delete a customer or a saved card using the following endpoints:\n\n* `Delete Customer`\n* `Delete Payment Method`\n\n**Test Mode Support**\n\nAny test card that simulates a successful purchase can be used for vaulting.\n\n**System Limitations**\n\nWe currently only support card vaulting for merchants who integrate via our API, have undergone enhanced KYC, and have the ability to verify cardholder identity on checkout."}]
